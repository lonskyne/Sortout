import {Button, VerticalBox, HorizontalBox, ScrollView } from "std-widgets.slint";

    export component App inherits Window {
        in property <string> current_folder;
        in property <string> current_file;
        in property <string> current_file_type;

        in property <string> current_file_content_text;
        in property <image> current_file_content_image;

        in property <string> marked_deletion_list;

        in property <bool> folder_chosen;
        in property <bool> folder_opened;

        callback choose_folder <=> choose_folder_btn.clicked;
        callback open_folder <=> open_folder_btn.clicked;

        callback prev_file <=> previous_file_btn.clicked;
        callback next_file <=> next_file_btn.clicked;

        callback mark_delete <=> mark_delete_btn.clicked;

        callback confirm_marks <=> confirm_marks_btn.clicked;

        VerticalBox {
            Text { text : "Current folder: " + current_folder; }

            choose_folder_btn := Button { text: "Choose folder"; }

            open_folder_btn := Button { text: "Open folder"; enabled: folder_chosen; }

            HorizontalBox {
                VerticalBox {
                    width: 10%;

                    Text { text: "Marked for deletion:"; }

                    Text { text: marked_deletion_list; }
                }
            }

            confirm_marks_btn := Button { text: "Confirm marks"; enabled: folder_opened; }

            VerticalBox {
                Text { text : "Current file"; }
                Text { text : "File name: " + current_file; }
                Text { text: "File type: " + current_file_type; }
                Text { text: "File contents: "; }
                Text { text: current_file_content_text;}
                Image { source: current_file_content_image; width: 60%; height: 60%; image-rendering: pixelated;}
            }

            HorizontalBox {
                mark_delete_btn := Button { text: "Mark: Delete"; enabled: folder_opened; }
            }

            HorizontalBox {
                previous_file_btn := Button { text: "<"; enabled: folder_opened; }

                next_file_btn := Button { text: ">"; enabled: folder_opened; }
            }
        }


        forward-focus: my-key-handler;

        my-key-handler := FocusScope {
            key-pressed(event) => {
                if event.text == Key.LeftArrow { previous_file_btn.clicked(); }
                if event.text == Key.RightArrow { next_file_btn.clicked(); }
                if event.text == Key.Delete { mark_delete_btn.clicked(); }
                accept
            }
        }
    }